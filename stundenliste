einlesen in die thematik: 10
erstes programmieren mit matrizen lösung: 3
kronecker graph generator: 5
beginn mit listen zu proggen: 4
weiter behandlung als buffer und bfs: 6
parallelisiert: 10

50-60 Stunden geschätzt bis jetzt, Aufstellung folgt
+10-20 Stunden Zeit

62 stunden: beschäftigung mit long bzw. reduce_scatter, beginn schriftliche arbeit
64.5 stunden: bitmap auf long umgestellt, schreiben der arbeit
08.07.2016: 66.5 Stunden für Umstellung auf Lesen/Schreiben des Graphes in File
09.07.2016: 68.5 Stunden Erfassen der Arbeit / Grundalgo
10.07.2016: 69.5 Stunde Schreiben der Arbeit
11.07.2016: 70.5 Stunde Schreiben der Arbeit / Grundalgo in Pseudo
12.07.2016: 73.5 Stunden Schreiben der Arbeit / Testen
22.07.2016: 74.5 Stunde Edge List to Graph in Parallel Beginn
25.07.2016: 76.5 Stunden überlegen einer Strategie für parallele Abarbeitung der Edge List to Graph
79 Stunden Sortieren der Edge List, wird noch sequentiell durchgeführt, dann auf Prozessoren aufgeteilt
80.5 Stunden Implementieren, dass sortierte Egde List auf Procs aufgeteilt wird
83 Stunden Implementieren weiter
85 Stunden Weiterimplementieren, Edge List wird nun als zweites Kriterium nach EndVertex sortiert
02.08.2016: 87 Stunden Edge List befindet sich nun verteilt auf jedem Prozessor, wird nun zu Buffer transformiert, noch nicht fertig
03.08.2016: 89 Stunden Erweiterung fast fertig, noch Fehler enthalten
05.08.2016: 94 Stunden Erweiterung so weit fertig, Sortieren sollte noch parallel durchgeführt werden
07.08.2016: 96 Stunden Zeit gemessen, Gedanken über Parent Array
09.08.2016: 98 Stunden Wieder Zeit gemessen, Gedanken über Parent Array, für Möglichkeit 3 entschieden
11.08.2016: 100 Stunden MPI_IN_PLACE, SLURM, Bitte noch auf Richtigkeit überprüfen
11.08.2016: 102 Stunden reduce_scatter, es stimmt was noch nicht
12.08.2016: 103 Stunden, Fehler ausgebessert, memset hat nicht richtig gefunzt für next_level, weiter Tests um sicher zu gehen
14.08.2016: 106 Stunden, Umstellung auf parent array
15.08.2016: 109 Stunden, Parent array fertig mit uint64_t lösung (3. Möglichkeit), deutlich zu ineffektiv, wegen reduce_scatter, dass bei so großer datenmenge + MPI_MAX Op zu lange braucht
16.08.2016: 112 Stunden, Umstellung auf allvisted bitmap die mittels allreduce auf alle procs aufgeteilt wird
16.08.2016: 113 Stunden, Tests
16.08.2016: 114 Stunden, Treffen mit Professor
20.08.2016: 117 Stunden, Tests + Schreiben der Arbeit
23.08.2016: 120 Stunden, Schreiben der Arbeit
24.08.2016: 122 Stunden, Schreiben der Arbeit
25.08.2016: 125 Stunden, Schreiben der Arbeit
27.08.2016: 126 Stunden, Schreiben der Arbeit
28.08.2016: 127 Stunden, Schreiber der Arbeit
29.08.2016: 128 Stunden, Schreiben der Arbeit
31.08.2016: 129 Stunden, Schreiben der Arbeit
01.09.2016: 132 Stunden, Schreiben der Arbeit
02.09.2016: 135 Stunden, Schreiber der Arbeit, Lesen des Folien über richtiges Schreiben eines Papers :)
03.09.2016: 138 Stunden, Tests + Schreiben der Arbeit
04.09.2016: 140 Stunden, Schreiben der Arbeit
06.09.2016: 145 Stunden, Ändern des Generators auf Parallel, weitere Tests mit scale 26, scale 27 war leider nicht möglich weil read_graph zu lange braucht
18.09.2016: 148 Stunden, Schreiben des Kapitels graph500
19.09.2016: 149 Stunden, Schreibens
21.09.2016: 153 Stunden, Schreiben + Anfangen mit parallelen Quick-Merge Sort
22.09.2016: 155 Stunden, Quick-Merge Sort fast fertig
23.09.2016: 160 Stunden, Quick-Merge fertig, tests
27.09.2016: 162 Stunden, Tests + Schreiben + Anfangen SCALE Bestimmung
30.09.2016: 167 Stunden, Code aufgeräumt, Arbeit Schreiben
02.10.2016: 171 Stunden, Shuffeling, undirected graphs
04.10.2016: 173 Stunden, Schreiben
06.10.2016: 174 Stunden, 64 random unique + traversed edges
07.11.2016: 177 Stunden, Schreiben der Arbeit
09.11.2016: 180 Stunden, Schreiben der Arbeit
12.11.2016: 182 Stunden, Schreiben der Arbeit
30.11.2016: 184 Stunden, Schreiben der Arbeit
03.12.2016: 186 Stunden, Schreiber der Arbeit
17.12.2016: 188 Stunden
21.12.2016: 190 Stunden
22.12.2016: 191 Stunden
23.12.2016: 192 Stunden
27.12.2016: 195 Stunden
28.12.2016: 197 Stunden
28.12.2016: 198 Stunden
29.12.2016: 201 Stunden
30.12.2016: 202 Stunden
07.01.2016: 208 Stunden
08.01.2016: 209 Stunden
10.01.2016: 210 Stunden
11.01.2016: 213 Stunden
12.01.2016: 215 Stunden
… : 225 Stunden Schreiben der Arbeit
18.01.2016: 227 Stunden Schreiben der Arbeit: laufzeitanalyse